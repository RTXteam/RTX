# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server.models.qualifier import Qualifier
from openapi_server import util

from openapi_server.models.qualifier import Qualifier  # noqa: E501

class QualifierConstraint(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, qualifier_set=None):  # noqa: E501
        """QualifierConstraint - a model defined in OpenAPI

        :param qualifier_set: The qualifier_set of this QualifierConstraint.  # noqa: E501
        :type qualifier_set: List[Qualifier]
        """
        self.openapi_types = {
            'qualifier_set': List[Qualifier]
        }

        self.attribute_map = {
            'qualifier_set': 'qualifier_set'
        }

        self._qualifier_set = qualifier_set

    @classmethod
    def from_dict(cls, dikt) -> 'QualifierConstraint':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The QualifierConstraint of this QualifierConstraint.  # noqa: E501
        :rtype: QualifierConstraint
        """
        return util.deserialize_model(dikt, cls)

    @property
    def qualifier_set(self):
        """Gets the qualifier_set of this QualifierConstraint.

        A set of Qualifiers that serves to add nuance to a query, by constraining allowed values held by Qualifiers on queried Edges.  # noqa: E501

        :return: The qualifier_set of this QualifierConstraint.
        :rtype: List[Qualifier]
        """
        return self._qualifier_set

    @qualifier_set.setter
    def qualifier_set(self, qualifier_set):
        """Sets the qualifier_set of this QualifierConstraint.

        A set of Qualifiers that serves to add nuance to a query, by constraining allowed values held by Qualifiers on queried Edges.  # noqa: E501

        :param qualifier_set: The qualifier_set of this QualifierConstraint.
        :type qualifier_set: List[Qualifier]
        """
        if qualifier_set is None:
            raise ValueError("Invalid value for `qualifier_set`, must not be `None`")  # noqa: E501

        self._qualifier_set = qualifier_set
