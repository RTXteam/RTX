# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server.models.attribute import Attribute
from openapi_server import util

from openapi_server.models.attribute import Attribute  # noqa: E501

class PathBinding(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id=None, attributes=None):  # noqa: E501
        """PathBinding - a model defined in OpenAPI

        :param id: The id of this PathBinding.  # noqa: E501
        :type id: str
        :param attributes: The attributes of this PathBinding.  # noqa: E501
        :type attributes: List[Attribute]
        """
        self.openapi_types = {
            'id': str,
            'attributes': List[Attribute]
        }

        self.attribute_map = {
            'id': 'id',
            'attributes': 'attributes'
        }

        self._id = id
        self._attributes = attributes

    @classmethod
    def from_dict(cls, dikt) -> 'PathBinding':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The PathBinding of this PathBinding.  # noqa: E501
        :rtype: PathBinding
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self):
        """Gets the id of this PathBinding.

        The key identifier of a specific KnowlpathGraph Path.  # noqa: E501

        :return: The id of this PathBinding.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this PathBinding.

        The key identifier of a specific KnowlpathGraph Path.  # noqa: E501

        :param id: The id of this PathBinding.
        :type id: str
        """
        if id is None:
            raise ValueError("Invalid value for `id`, must not be `None`")  # noqa: E501

        self._id = id

    @property
    def attributes(self):
        """Gets the attributes of this PathBinding.

        A list of attributes providing further information about the path binding. This is not intended for capturing path attributes and should only be used for properties that vary from result to result.  # noqa: E501

        :return: The attributes of this PathBinding.
        :rtype: List[Attribute]
        """
        return self._attributes

    @attributes.setter
    def attributes(self, attributes):
        """Sets the attributes of this PathBinding.

        A list of attributes providing further information about the path binding. This is not intended for capturing path attributes and should only be used for properties that vary from result to result.  # noqa: E501

        :param attributes: The attributes of this PathBinding.
        :type attributes: List[Attribute]
        """

        self._attributes = attributes
