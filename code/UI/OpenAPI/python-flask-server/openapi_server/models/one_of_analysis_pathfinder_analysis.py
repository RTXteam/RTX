import sys
def eprint(*args, **kwargs): print(*args, file=sys.stderr, **kwargs)

from openapi_server.models.analysis import Analysis
from openapi_server.models.pathfinder_analysis import PathfinderAnalysis

class OneOfAnalysisPathfinderAnalysis():
    """NOTE: This class should be auto generated by OpenAPI Generator (https://openapi-generator.tech).
        but it is mysteriously not, so it was hand-coded by Eric Deutsch
    """

    def __new__(cls, *args, **kwargs):

        debug = False

        if debug:
            eprint("DEBUG: Entering OneOfAnalysisPathfinderAnalysis.new()")
            eprint(f"DEBUG:   cls={cls}")
            eprint(f"DEBUG:   args={args}")
            eprint(f"DEBUG:   kwargs={kwargs}")

        #### If there is a path_bindings in the kwargs, then assume that this should be a PathfinderAnalysis object
        if 'path_bindings' in kwargs:
            if debug:
                eprint(f"DEBUG: OneOfAnalysisPathfinderAnalysis is generating a PathfinderAnalysis ({PathfinderAnalysis})")
            pathfinder_analysis = super().__new__(PathfinderAnalysis, *args, **kwargs)
            pathfinder_analysis.__init__(*args, **kwargs)
            return pathfinder_analysis

        #### Or otherwise a plain Analysis object
        else:
            if debug:
                eprint(f"DEBUG: OneOfAnalysisPathfinderAnalysis is generating an Analysis ({Analysis})")
            analysis = super().__new__(Analysis, *args, **kwargs)
            analysis.__init__(*args, **kwargs)
            return analysis

