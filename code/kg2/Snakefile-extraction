rule UMLS:
    input:
        config['VALIDATION_PLACEHOLDER']
    output:
        config['BUILD_DIR'] + "/umls-placeholder.empty"
    log:
        config['BUILD_DIR'] + "/extract-umls" + config['TEST_SUFFIX'] + ".log"
    shell:
        "bash -x " + config['CODE_DIR'] + "/extract-umls.sh " + config['BUILD_DIR'] + " > {log} 2>&1 && touch {output}" 

rule UniprotKB:
    input:
        config['VALIDATION_PLACEHOLDER']
    output:
        config['UNIPROTKB_DAT_FILE']
    log:
        config['BUILD_DIR'] + "/extract-uniprotkb" + config['TEST_SUFFIX'] + ".log"
    shell:
        "bash -x " + config['CODE_DIR'] + "/extract-uniprotkb.sh {output} > {log} 2>&1"

rule Ensembl:
    input:
        config['VALIDATION_PLACEHOLDER']
    output:
        config['ENSEMBL_SOURCE_JSON_FILE']
    log:
        config['BUILD_DIR'] + "/extract-ensembl" + config['TEST_SUFFIX'] + ".log"
    shell:
        "bash -x " + config['CODE_DIR'] + "/extract-ensembl.sh > {log} 2>&1"

rule UniChem:
    input:
        config['VALIDATION_PLACEHOLDER']
    output:
        config['UNICHEM_OUTPUT_TSV_FILE']
    log:
        config['BUILD_DIR'] + "/extract-unichem" + config['TEST_SUFFIX'] + ".log"
    shell:
        "bash -x " + config['CODE_DIR'] + "/extract-unichem.sh {output} > {log} 2>&1"

rule ChemBL:
    input:
        config['VALIDATION_PLACEHOLDER']
    output:
        placeholder = config['BUILD_DIR'] + "/chembl-placeholder.empty"
    log:
        config['BUILD_DIR'] + "/extract-chembl" + config['TEST_SUFFIX'] + ".log"
    shell:
        "bash -x " + config['CODE_DIR'] + "/extract-chembl.sh " + config['CHEMBL_MYSQL_DBNAME'] +" > {log} 2>&1 && touch {output.placeholder}"

rule NCBIGene:
    input:
        config['VALIDATION_PLACEHOLDER']
    output:
        config['NCBI_GENE_TSV_FILE']
    log:
        config['BUILD_DIR'] + "/extract-ncbigene" + config['TEST_SUFFIX'] + ".log"
    shell:
        "bash -x " + config['CODE_DIR'] + "/extract-ncbigene.sh {output} > {log} 2>&1"

rule DGIDB:
    input:
        config['VALIDATION_PLACEHOLDER']
    output:
        config['DGIDB_DIR'] + "/interactions.tsv"
    log:
        config['BUILD_DIR'] + "/extract-dgidb" + config['TEST_SUFFIX'] + ".log"
    shell:
        "bash -x " + config['CODE_DIR'] + "/extract-dgidb.sh " + config['DGIDB_DIR'] + " > {log} 2>&1"

rule RepoDB:
    input:
        config['VALIDATION_PLACEHOLDER']
    output:
        config['REPODB_INPUT_FILE']
    log:
        config['BUILD_DIR'] + "/download-repodb-csv" + config['TEST_SUFFIX'] + ".log"
    shell:
        "bash -x " + config['CODE_DIR'] + "/download-repodb-csv.sh " + config['REPODB_DIR'] + " > {log} 2>&1"

rule SMPDB:
    input:
        config['VALIDATION_PLACEHOLDER']
    output:
        config['SMPDB_INPUT_FILE']
    log:
        config['BUILD_DIR'] + "/extract-smpdb" + config['TEST_SUFFIX'] + ".log"
    shell:
        "bash -x " + config['CODE_DIR'] + "/extract-smpdb.sh " + config['SMPDB_DIR'] + " > {log} 2>&1"

rule DrugBank:
    input:
        config['VALIDATION_PLACEHOLDER']
    output:
        config['DRUGBANK_INPUT_FILE']
    log:
        config['BUILD_DIR'] + "/extract-drugbank" + config['TEST_SUFFIX'] + ".log"
    shell:
        "bash -x " + config['CODE_DIR'] + "/extract-drugbank.sh {output} > {log} 2>&1"

rule HMDB:
    input:
        config['VALIDATION_PLACEHOLDER']
    output:
        config['HMDB_INPUT_FILE']
    log:
        config['BUILD_DIR'] + "/extract-hmdb" + config['TEST_SUFFIX'] + ".log"
    shell:
        "bash -x " + config['CODE_DIR'] + "/extract-hmdb.sh > {log} 2>&1"

rule GO_Annotations:
    input:
        config['VALIDATION_PLACEHOLDER']
    output:
        config['GO_ANNOTATION_INPUT_FILE']
    log:
        config['BUILD_DIR'] + "/extract-go-annotations" + config['TEST_SUFFIX'] + ".log"
    shell:
        "bash -x " + config['CODE_DIR'] + "/extract-go-annotations.sh {output} > {log} 2>&1"

rule Reactome:
    input:
        config['VALIDATION_PLACEHOLDER']
    output:
        placeholder = config['BUILD_DIR'] + "/reactome-placeholder.empty"
    log:
        config['BUILD_DIR'] + "/extract-reactome" + config['TEST_SUFFIX'] + ".log"
    shell:
        "bash -x " + config['CODE_DIR'] + "/extract-reactome.sh " + config['REACTOME_MYSQL_DBNAME'] +" > {log} 2>&1 && touch {output.placeholder}"

rule miRBase:
    input:
        config['VALIDATION_PLACEHOLDER']
    output:
        config['MIRBASE_INPUT_FILE']
    log:
        config['BUILD_DIR'] + "/extract-mirbase" + config['TEST_SUFFIX'] + ".log"
    shell:
        "bash -x " + config['CODE_DIR'] + "/extract-mirbase.sh {output} > {log} 2>&1"