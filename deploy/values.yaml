# Default values for arax.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

initContainer:
  image:
    repository: 853771734544.dkr.ecr.us-east-1.amazonaws.com/translator-utils
    pullPolicy: IfNotPresent
    tag: "sftp"

image:
  # repository: nginx
  # pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  # tag: ""
  repository: 853771734544.dkr.ecr.us-east-1.amazonaws.com/translator-rtx-arax
  pullPolicy: IfNotPresent
  #  # Overrides the image tag whose default is the chart appVersion.
  tag: "BUILD_VERSION"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: LoadBalancer
  port: 80

ingress:
  enabled: true
  className: ""
  annotations: 
    kubernetes.io/ingress.class: alb
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/tags: Environment=CI
    alb.ingress.kubernetes.io/security-groups: translator-ci-alb-http-sg
    alb.ingress.kubernetes.io/ssl-policy: ELBSecurityPolicy-TLS-1-2-Ext-2018-06
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS":443}]'
    alb.ingress.kubernetes.io/actions.ssl-redirect: '{"Type": "redirect", "RedirectConfig": { "Protocol": "HTTPS", "Port": "443", "StatusCode": "HTTP_301"}}'
    alb.ingress.kubernetes.io/success-codes: '200-499'
    alb.ingress.kubernetes.io/healthcheck-path: '/'
  hosts:
    - host: arax.ci.transltr.io
      paths:
        - path: /*
          pathType: ImplementationSpecific
          backend:
            service: 
              name: ssl-redirect
              port:
                number: 443
        - path: /*
          pathType: ImplementationSpecific
          backend:
            service: 
              name: arax 
              port:
                number: 443
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

# With the following two sections, we can restrict the deployment on and only on the specific node
# toleration to node taint such that this deployment can be scheduled on the tainted node while others without the toleration can not
tolerations: 
- key      : "rtx"
  value    : "arax"
  operator : "Equal"
  effect   : "NoSchedule"

# nodeSelection affinity(application=arax) such that this deployment will only select the node with that label
affinity: 
  # this ensures pod only runs on node with label application=arax
  nodeAffinity:
    requiredDuringSchedulingIgnoredDuringExecution:
      nodeSelectorTerms:
      - matchExpressions:
        - key: application
          operator: In
          values:
          - arax
  # this ensures only ONE pod will run on each node
  podAntiAffinity:
    requiredDuringSchedulingIgnoredDuringExecution:
    - labelSelector:
        matchExpressions:
        - key: app.kubernetes.io/name
          operator: In
          values:
          - arax
      topologyKey: "kubernetes.io/hostname"


